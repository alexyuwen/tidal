do
  setcps (135/60/4)
  hush
  d1 $ "<1(3, 8, 6) [1(3, 8, 6) ~] [1 1(3, 8, 6)]>" # s "lt" # gain 2
  d2 $ fast 4 $ s "<[hc hc*2] [hc hc ~ hc] hc*2 [~ hc]*2>" # gain "[0.9 0.7]"
  d3 $ "cp"
  d4 $ ""



do
  setcps (135/60/4)
  hush
  d1 $ "bd" # gain 2
  d2 $ "hc*4"
  d4 $ wrandcat [("t([5|6|7], 12, 1)", 0.5), ("t([11], 36)", 0.5), ("~ ~ . t t", 0.1)] # s "ht" # vowel "a"
  -- d5 $ fast 6 $ s "hc hc*2" # vowel "e" # gain 0.77
  -- d6 $ "cp(<5 6 8 6>,24,2)" # vowel "i"



do
  setcps (135/60/5)
  d1 $ "bd" # gain 2
  d2 $ "hc*5" # vowel "o"
  d3 $ fast (5/2) $ "~ ~ ~ cp . ~ cp"
  d4 $ fast (5/4) $ "ht(10,16)" # vowel "o"



-- To use freq instead of n, make rand exponential using (hi - lo) * (rand^2) + lo
do
  d1 $ segment 24 $ n (12 * rand) # s "supervibe"
  d2 $ segment 1 $ n (12 * rand) |+ n "-12, 0, 12" # octave 4 # s "supervibe" # legato 1.5


-- Hc every so often.
do
  d1 $ "cp"
  d2 $ fast 8 $ every (segment 1 $ irand 8) (const $ s "hc") $ "~"

-- Time-shifting a break.
do
  d1 $ "cp"
  d2 $ someCyclesBy 0.2 (const silence) $ (<~) (cycleChoose [0, 1/4, 2/4, 3/4]) $ striate 4 $ loopAt 1 "break:1" # cut 1

-- Improvisation starting-point.
do
  d1 $ "cp"
  d2 $ slice 8 "{0 1 2 3 4 5 6 7}%8" $ loopAt 1 "break:1" # cut 1

-- Improvisation starting-point.
let
normalBreak = chop 16 $ loopAt 1 "break:1" # cut 1
fastBreak = hurry 1.5 $ chop 16 $ loopAt 1 "break:1" # cut 1
mixedBreak = wrandcat [
    (fastBreak, 3),
    (normalBreak, 5)
  ]
in do
  d1 $ "cp"
  d2 $ mixedBreak

-- Starting point.
do
  d1 $ striate 2 $ loopAt 1 $ s "break:1" # cut 1 * speed "1 2 1 1"
  d2 $ "cp"

-- Londynn.
let
loopAts = [ 9/x | x <- [4,5,6] ] -- List comprehension.  Note that [4..6] does not work.
in do
  d1 $ chop 1024 $ loopAt (stack $ loopAts) $ s "londynn" # hpf 1000
  d1 $ chop 1024 $ loopAt (2) $ s "londynn" -- The bass note is from the beginning of each cycle!
  d1 $ loopAt (stack $ loopAts) $ splice 1024 "177..1023" $ s "londynn"
  d1 $ chop 1024 $ loopAt 4 $ s "londynn"

-- Bass line.
let
gallop = fast 2 $ shuffle 2 $ stack [
  slice 8 "0@3 2 . 0 2" $ loopAt 1 $ s "break:4",
  n (scale "minor" "[0 . ~ -3] [0 ~ -3 ~]") # octave 3 # s "moogBass" # gain 1.8
  ]
in do
  d1 "cp"
  d2 $ gallop






