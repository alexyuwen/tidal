do
  setcps (135/60/4)
  hush
  d1 $ "bd" # gain 2 # speed "1"
  d2 $ "~ cp"
  d3 $ n "0 7 ~ 0 . 8" |+ n "-5" # s "supermandolin" # vowel "o"
  d4 $ "hc(9, 16, 3)" # gain "[0.7!3 0.8] !"
  d5 $ "cp(5, 16)" # vowel "o" # gain 0.72
  d6 $ "cp(5, 16, 2)" # vowel "e" # gain 0.66



do
  setcps (135/60/4)
  hush
  d1 $ "bd" # gain 2
  -- d1 $ fast 2 $ "1(5,8)" # s "bd" # gain 1.8
  d2 $ every 3 (const "hc([5|7],16,[2|4|5])") $ "hc(3,8)"
  d3 $ n "< [~ 5 5 ~ . 5 3] [~ 3 3 ~ . 3 1.5] [0 1.5 1.5 0 . 1.5 [0*2 ~]] [0, 7] [0, 7, [10 12]] [0, 7, 12] >" |- n 5 # s "supermandolin" # legato 2.2 # vowel "i" # gain 1.4
  d3 $ n "< [~ 5 5 ~ . 5 3] [~ 3 3 ~ . 3 1.5] [0 1.5 1.5 0 . 1.5 [0*2 ~]] [-24, -5, 0] >" |- n 5 # s "supermandolin" # legato "0.5 2.6@3" # vowel "i" # gain 1.5
  d4 $ slow "<2 2 1>" $ n "0 1 0 -2" |- n 5 # s "superpiano" # vowel "i" # legato 1
  -- d4 $ every 2 $ "cp(5, 8)"
  d5 $ s "sd"
  d6 $ degradeBy 0.2 $ n "7*8" |+ n "7,12" # s "superpiano" # vowel "i" # lpf 500
  -- d7 $ slow 2 $ n "<[0 12 10 8.5 7 5 3 1.5] [0 1.5 3 5 5 3 1.5 0]>" |- n (5 + 24) # s "supermandolin" # vowel "a" # gain 1.4 # legato 3



let myChord = [0, 3.86314, 7.01955, 12, 15.86314] -- Just intonation major.
in
d1 $ rolledBy (0.75 * rand^3 + 0.25) $ n (stack myChord) |+ n "df5" # s "supervibe" # room 0.5 # cps (wchoose [(0.6, 4), (0.4, 4), (0.2, 1)])



let
-- random double time, every other cycle
p1 = stack [
  fast (segment 8 $ wchoose [(1, "<8 1>"), (2, 1)]) $ chop 128 $ loopAt 1 $ s "break:1" # cut 1,
  n "0 ~!15" # octave "2" # s "organTonewheel1" # gain 2
  ]
-- randomly drop the 1st, 6th, 7th, and 8th chunks
p2 = stack [
  mask (sew "[0 1 1 1] [1 0 0 0]" "1" $ segment 8 $ wchoose [(True, 4), (False, 1)]) $ fast 2 $ chop 128 $ loopAt 1 $ s "break:1" # cut 1,
  n "<0 0 0 <[0!7 ~] [0!5 ~!3]>>" # octave 2 # s "organTonewheel0" # gain 1.5
  ]
in do
  resetCycles
  d1 $ seqPLoop [
    (0, 8, p1),
    (8, 16, p2)
    ]




-- Violin fiddle.
let
tones = "1 2 3 0 . 1 2 1 0 . 1 0 1 2 . 3 2 1 0"
arpPat = n (bite 8 (scramble 4 tones) $ arpg $ "c4'min'8'i2")
scalePat = n (bite 4 (scramble 4 tones) $ (scale "minor" "-3 0 1 2"))
combinedPat = select (segment 2 $ wchoose [(0, 1), (1, 9)]) [arpPat, scalePat] # s "violin" # vowel "u" # legato 1.25
fastPat = fast 4 $ n (scale "minor" "0 [2 1 . 0]")
drumStart = "[0 0 0?0.8 0?0.2]*4"
drumMiddle = "<[0|4] [2|4]>*8"
drumPat = (<~) 8 $ slice 8 (select ("0?0.09 1?0.04 1?0.04 [1?0.2 1]") [drumStart, drumMiddle]) $ loopAt 1 $ s "break:4" # cut 1 # gain "1.25 1.12@3"
melodyPat = (<~) 4 $ select ((/2) <$> "<[[1|2] 1 0 1] [[1|2] 1 <0 1> <1 2>]>") [arpPat, scalePat, slow 2 $ (<~) (1/8) fastPat] # s "violin" # vowel "u" # legato 1.25 # gain 1.2
melodyPat2 = (<~) 20 $ pickF ((<~) (segment 1 $ rand) $ segment 1 $ wchoose [(0, 5), (1, 2)]) [id, fast 1.5] $ melodyPat # cps (segment 0.5 $ wchoose [(0.57, 6), (0.44, 1)])
melodyIntro = (<~) (1/16) $ fast 0.5 $ melodyPat # vowel "o"
organDrone = slow 4 $ n "c2" # s "organDonor" # gain 1.5
in do
  d1 $ seqPLoop [
    (0, 7 + (9/16), melodyIntro # cps (range 0.3 0.57 $ slow 8 $ saw)),
    (7 + (9/16), 8, melodyPat2),
    (8, 31 + (9/16), melodyPat2),
    (31 + (9/16), 36 + (9/16), melodyIntro # cps (range 0.3 0.57 $ slow 7 $ isaw)),
    (36 + (9/16), 37, melodyPat2 # cps 0.57),
    (37, 120, melodyPat2),
    (4, 31.5, drumPat),
    (39, 120, drumPat),
    (4, 31.5, organDrone),
    (40, 120, organDrone)
    ]



-- burning the days
let
gainMult = 0.9
in do
  setcps 0.05
  d1 $ "cp"
  d1 $ n "c2" # s "organDonor" # gain (1.6 * gainMult)
  d3 $ fast 1.42 $ n "7" # octave 3 # s "violin" # gain (1.2 * gainMult) # vowel "a|o|u|x"
  d4 $ fast 2.41 $ n "0" # octave 4 # s "violin" # gain (1.25 * gainMult) # vowel "a|o|u|x"
  d5 $ fast 2.14 $ n "7" # octave 4 # s "violin" # gain (1 * gainMult) # vowel "a|o|u|x"
  d6 $ stack [fast (2*j) $ n "3.5" |- n (i) # octave 5 # s "violin" # vowel "<[a|o|u] x [a|o|u]>" # gain ("0.99|0.5|0" * gainMult) | (i, j) <- zip [0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2] [1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.1, 2.2]]











