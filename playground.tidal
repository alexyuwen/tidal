let
tones = "1 2 3 0 . 1 2 1 0 . 1 0 1 2 . 3 2 1 0"
arpPat = n (bite 8 (scramble 4 tones) $ arpg $ "c4'min'8'i2") # s "violin"
scalePat = n (bite 4 (scramble 4 tones) $ (scale "minor" "-3 0 1 2")) # s "violin"
combinedPat = select (segment 2 $ irand 2) [arpPat, scalePat]
fastPat = fast 4 $ n (scale "minor" "0 [2 1 . 0]") # s "violin"
drumStart = "[0 0 0?0.8 0?0.2]*4"
drumMiddle = "<[0|4] [2|4]>*8"
in do
  d1 $ "cp"
  d2 $ n "c2" # s "organDonor" # gain 1.5
  -- d3 $ slice 8 (select ("0 1 1 1?0.2") [drumStart, drumMiddle]) $ loopAt 1 $ s "break:4" # cut 1 # gain "1.1 1 1 1"
  d4 $ select (segment 8 $ wchoose [(0, 4), (1, 1)]) [combinedPat, fastPat]
  d4 $ select ((/2) <$> "<[2 1 0 0] [2 1 1 <1 2>]>") [arpPat, scalePat, slow 2 $ (<~) (1/8) fastPat]
  d4 $ while "f(3,8)" (ply 2) $ slow 2 $ n (bite 4 tones $ (scale "minor" "-3 0 1 2")) # s "violin"


:t while



let
drumStart = "[0 0 0?0.8 0?0.2]*4"
drumMiddle = "<[0|4] [2|4]>*8"
in do
  d1 "cp"
  d2 $ splice 8 (segment 8 $ choose [2, 4]) $ s "break:4"
  d2 $ splice 8 (segment 8 $ choose [0, 4]) $ s "break:4"
  d2 $ slice 8 "[0 0 0? 0?] <[0|4]*6 [2|4]*6>@3" $ loopAt 1 $ s "break:4" # cut 1
  d2 $ slice 8 (select ("0 1 1 1?0.2") [drumStart, drumMiddle]) $ loopAt 1 $ s "break:4" # cut 1 # gain "1.1 1 1 1" -- Equivalent to above, but with more potential for growth.





let
bass1 = "[0 . ~ -3]*4"
bass2 = "[0 ~ -3 ~]*4"
bass3 = "0*4"
in do
  d1 "cp"
  d2 $ n (scale "minor" $ select (segment 4 $ "1") [bass1, bass2, bass3]) # octave 3 # s "moogBass" # gain 1.8






